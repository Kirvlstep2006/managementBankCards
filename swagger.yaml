openapi: 3.0.0
info:
  title: Sample API
  description: API для управления пользователями
  version: 1.0.0
  contact:
    email: example@example.com

servers:
  - url: http://localhost:5665/main
    description: Локальный сервер
paths:
  /read:
    get:
      tags:
        - Cards
      summary: Получить список всех карт
      description: Возвращает список всех банковских карт
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BankCard'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /create:
    post:
      tags:
        - Cards
      summary: Создать новую карту
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankCard'
      responses:
        '200':
          description: Карта успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankCard'
        '400':
          description: Неверные данные карты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /{balance}:
    delete:
      tags:
        - Cards
      summary: Удалить карту по балансу
      parameters:
        - name: balance
          in: path
          required: true
          schema:
            type: number
            format: double
      responses:
        '204':
          description: Карта удалена
        '404':
          description: Карта не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /{id_cards}/balance:
    put:
      tags:
        - Cards
      summary: Обновить баланс карты
      parameters:
        - name: id_cards
          in: path
          required: true
          schema:
            type: integer
        - name: amount
          in: query
          required: true
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Баланс обновлен
        '400':
          description: Неверная сумма
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /perevod/{source_card_number}/{targret_card_number2}/amount:
    put:
      tags:
        - Cards
      summary: Перевод между картами
      parameters:
        - name: source_card_number
          in: path
          required: true
          schema:
            type: string
        - name: targret_card_number2
          in: path
          required: true
          schema:
            type: string
        - name: amount
          in: query
          required: true
          schema:
            type: number
            format: double
            minimum: 0.01
      responses:
        '200':
          description: Перевод выполнен
        '400':
          description: Неверная сумма или карты
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    BankCard:
      type: object
      properties:
        id_cards:
          type: integer
        card_number:
          type: string
        card_holder:
          type: string
        expiry_date:
          type: string
          format: date
        status:
          type: string
        balance:
          type: number
          format: double
        transaction_history:
          type: string
      required:
        - card_number
        - balance

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        statusCode:
          type: integer
